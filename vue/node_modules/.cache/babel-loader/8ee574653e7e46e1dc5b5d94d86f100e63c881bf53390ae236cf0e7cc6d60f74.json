{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-output\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatMessages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: _normalizeClass({\n        'message': true,\n        'user': message.isUser\n      })\n    }, _toDisplayString(message.text), 3 /* TEXT, CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"question-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.question = $event),\n    placeholder: \"Введите ваш вопрос здесь\",\n    onKeydown: _cache[1] || (_cache[1] = (...args) => $setup.handleKeyDown && $setup.handleKeyDown(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $setup.question]]), _createElementVNode(\"button\", {\n    class: \"send-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.askQuestion && $setup.askQuestion(...args))\n  }, \"Отправить\"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Загрузка...\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","chatMessages","message","key","id","_normalizeClass","isUser","text","question","$event","placeholder","onKeydown","_cache","args","handleKeyDown","onClick","askQuestion","loading","_hoisted_3"],"sources":["/home/doduohor/vue/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\">\n        <div class=\"chat-output\">\n            <div v-for=\"message in chatMessages\" :key=\"message.id\" :class=\"{ 'message': true, 'user': message.isUser }\">\n                {{ message.text }}\n            </div>\n        </div>\n        <textarea class=\"question-input\" v-model=\"question\" placeholder=\"Введите ваш вопрос здесь\"\n            @keydown=\"handleKeyDown\"></textarea>\n        <button class=\"send-button\" @click=\"askQuestion\">Отправить</button>\n        <div v-if=\"loading\" class=\"loading\">Загрузка...</div>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport axios from 'axios';\n\nexport default {\n    setup() {\n        const question = ref('');\n        const loading = ref(false);\n        const chatMessages = ref([]);\n\n        const addMessage = (text, isUser = false) => {\n            chatMessages.value.push({\n                id: chatMessages.value.length,\n                text,\n                isUser,\n            });\n        };\n\n        const askQuestion = async () => {\n            loading.value = true;\n            addMessage(question.value, true); // Добавить сообщение пользователя в чат\n            try {\n                const res = await axios.post('API_ENDPOINT', { question: question.value });\n                addMessage(res.data.answer); // Добавить ответ в чат\n            } catch (error) {\n                console.error(error);\n                addMessage('Произошла ошибка', false); // Добавить сообщение об ошибке в чат\n            } finally {\n                loading.value = false;\n            }\n        };\n\n        const handleKeyDown = (event) => {\n            if (event.key === 'Enter' && !event.shiftKey) {\n                event.preventDefault();\n                askQuestion();\n            }\n        };\n\n        return { question, loading, chatMessages, askQuestion, handleKeyDown };\n    }\n};\n</script>\n\n<style>\nbody {\n    background-color: #000000;\n    /* Цвет фона страницы */\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    /* Установка шрифта */\n}\n\n.chat-container {\n    max-width: 600px;\n    margin: 20px auto;\n    padding: 20px;\n    background-color: #1e1e1e;\n    border-radius: 15px;\n    box-shadow: 0 5px 8px rgba(0, 0, 0, 0.5);\n    color: #ffffff;\n}\n\n.chat-output {\n    max-height: 200px;\n    /* Максимальная высота окна вывода */\n    overflow-y: auto;\n    /* Включить вертикальную прокрутку, если контент не помещается */\n}\n\n.message {\n    padding: 10px;\n    margin: 10px 0;\n    background-color: #007acc;\n    /* Голубой цвет для сообщений */\n    border-radius: 6px;\n    color: #fff;\n    font-family: Arial, sans-serif;\n}\n\n.message.user {\n    background-color: #4caf50;\n    /* Зеленый цвет для сообщений пользователя */\n}\n\n.question-input {\n    width: 95%;\n    padding: 15px;\n    margin-bottom: 15px;\n    background-color: #2a2a2a;\n    border: 1px solid #333333;\n    border-radius: 6px;\n    color: #ffffff;\n    resize: none;\n    font-family: Arial, sans-serif;\n}\n\n.send-button {\n    padding: 10px 25px;\n    background-color: #4caf50;\n    color: white;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    transition: background-color 0.3s, transform 0.2s;\n    display: block;\n    margin: 0 auto;\n    font-family: Arial, sans-serif;\n}\n\n.send-button:hover {\n    background-color: #43a047;\n    transform: scale(1.05);\n}\n\n.loading {\n    text-align: center;\n    color: #4caf50;\n    margin-top: 10px;\n    font-family: Arial, sans-serif;\n}</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAa;;;EAQJA,KAAK,EAAC;;;uBAT9BC,mBAAA,CAUM,OAVNC,UAUM,GATFC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHFH,mBAAA,CAEMI,SAAA,QAAAC,WAAA,CAFiBC,MAAA,CAAAC,YAAY,EAAvBC,OAAO;yBAAnBR,mBAAA,CAEM;MAFgCS,GAAG,EAAED,OAAO,CAACE,EAAE;MAAGX,KAAK,EAAAY,eAAA;QAAA;QAAA,QAA6BH,OAAO,CAACI;MAAM;wBACjGJ,OAAO,CAACK,IAAI;oDAGvBX,mBAAA,CACwC;IAD9BH,KAAK,EAAC,gBAAgB;+DAAUO,MAAA,CAAAQ,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC,0BAA0B;IACrFC,SAAO,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,MAAA,CAAAc,aAAA,IAAAd,MAAA,CAAAc,aAAA,IAAAD,IAAA,CAAa;iEADeb,MAAA,CAAAQ,QAAQ,E,GAElDZ,mBAAA,CAAmE;IAA3DH,KAAK,EAAC,aAAa;IAAEsB,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,MAAA,CAAAgB,WAAA,IAAAhB,MAAA,CAAAgB,WAAA,IAAAH,IAAA,CAAW;KAAE,WAAS,GAC/Cb,MAAA,CAAAiB,OAAO,I,cAAlBvB,mBAAA,CAAqD,OAArDwB,UAAqD,EAAjB,aAAW,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}