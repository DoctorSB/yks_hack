{"ast":null,"code":"import { vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"response\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"chat-container\", {\n      'moved': $setup.messageSent\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"textarea\", {\n    class: \"question-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.question = $event),\n    placeholder: \"Введите ваш вопрос здесь\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.askQuestion && $setup.askQuestion(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $setup.question]]), _createElementVNode(\"button\", {\n    class: \"send-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.askQuestion && $setup.askQuestion(...args))\n  }, \"&\")]), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Загрузка...\")) : _createCommentVNode(\"v-if\", true), $setup.response ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.response), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","messageSent","_createElementVNode","_hoisted_1","question","$event","placeholder","onKeyup","_cache","_withKeys","args","askQuestion","onClick","loading","_hoisted_2","response","_hoisted_3","_toDisplayString"],"sources":["/home/doduohor/vue/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\" :class=\"{ 'moved': messageSent }\">\n        <div class=\"input-container\">\n            <textarea class=\"question-input\" v-model=\"question\" placeholder=\"Введите ваш вопрос здесь\"\n                @keyup.enter=\"askQuestion\"></textarea>\n            <button class=\"send-button\" @click=\"askQuestion\">&</button>\n        </div>\n        <div v-if=\"loading\" class=\"loading\">Загрузка...</div>\n        <div v-if=\"response\" class=\"response\">{{ response }}</div>\n    </div>\n</template>\n  \n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const question = ref('');\n        const response = ref(null);\n        const loading = ref(false);\n        const messageSent = ref(false);\n\n        const askQuestion = async () => {\n            if (question.value.trim() === '') return; // Предотвращение отправки пустых сообщений\n            loading.value = true;\n            messageSent.value = true;\n            // Здесь должен быть код для отправки запроса к API\n            // Для примера, просто имитируем получение ответа\n            setTimeout(() => {\n                response.value = question.value; // Удаление \"Ответ: \" для простоты\n                loading.value = false;\n            }, 2000);\n        };\n\n        return { question, response, askQuestion, loading, messageSent };\n    }\n};\n</script>\n  \n<style>\n.chat-container {\n    position: absolute;\n    top: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    max-width: 600px;\n    padding: 20px;\n    background-color: #1e1e1e;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);\n    color: #ffffff;\n    transition: all 0.5s ease;\n}\n\n.chat-container.moved {\n    top: auto;\n    bottom: 20px;\n    /* Перемещение в нижнюю часть страницы */\n    transform: translateX(-50%);\n}\n\n.input-container {\n    display: flex;\n    align-items: stretch;\n    margin-bottom: 15px;\n}\n\n.question-input {\n    flex-grow: 1;\n    padding: 12px;\n    background-color: #2a2a2a;\n    border: 1px solid #333333;\n    border-radius: 6px 0 0 6px;\n    color: #ffffff;\n    resize: none;\n}\n\n.send-button {\n    padding: 0 15px;\n    background-color: #4caf50;\n    color: white;\n    border: none;\n    border-radius: 0 6px 6px 0;\n    cursor: pointer;\n    transition: background-color 0.3s, transform 0.2s;\n}\n\n.send-button:hover {\n    background-color: #43a047;\n    transform: scale(1.05);\n}\n\n.loading {\n    text-align: center;\n    color: #4caf50;\n    margin-top: 10px;\n}\n\n.response {\n    margin-top: 20px;\n    padding: 15px;\n    background-color: #252525;\n    border: 1px solid #333333;\n    border-radius: 6px;\n    color: #ffffff;\n}\n</style>\n  "],"mappings":";;EAEaA,KAAK,EAAC;AAAiB;;;EAKRA,KAAK,EAAC;;;;EACLA,KAAK,EAAC;;;uBAP/BC,mBAAA,CAQM;IARDD,KAAK,EAAAE,eAAA,EAAC,gBAAgB;MAAA,SAAoBC,MAAA,CAAAC;IAAW;MACtDC,mBAAA,CAIM,OAJNC,UAIM,G,gBAHFD,mBAAA,CAC0C;IADhCL,KAAK,EAAC,gBAAgB;+DAAUG,MAAA,CAAAI,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC,0BAA0B;IACrFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQV,MAAA,CAAAW,WAAA,IAAAX,MAAA,CAAAW,WAAA,IAAAD,IAAA,CAAW;iEADaV,MAAA,CAAAI,QAAQ,E,GAElDF,mBAAA,CAA2D;IAAnDL,KAAK,EAAC,aAAa;IAAEe,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEV,MAAA,CAAAW,WAAA,IAAAX,MAAA,CAAAW,WAAA,IAAAD,IAAA,CAAW;KAAE,GAAC,E,GAE3CV,MAAA,CAAAa,OAAO,I,cAAlBf,mBAAA,CAAqD,OAArDgB,UAAqD,EAAjB,aAAW,K,mCACpCd,MAAA,CAAAe,QAAQ,I,cAAnBjB,mBAAA,CAA0D,OAA1DkB,UAA0D,EAAAC,gBAAA,CAAjBjB,MAAA,CAAAe,QAAQ,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}