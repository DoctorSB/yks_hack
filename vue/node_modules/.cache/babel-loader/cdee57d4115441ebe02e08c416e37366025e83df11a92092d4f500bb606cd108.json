{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"response\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"textarea\", {\n    class: \"question-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.question = $event),\n    placeholder: \"Введите ваш вопрос здесь\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.question]]), _createElementVNode(\"button\", {\n    class: \"send-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.askQuestion && $setup.askQuestion(...args))\n  }, \"&\")]), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Загрузка...\")) : _createCommentVNode(\"v-if\", true), _ctx.response ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Ответ: \" + _toDisplayString(_ctx.response), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","question","$event","placeholder","onClick","_cache","args","askQuestion","loading","_hoisted_3","_ctx","response","_hoisted_4","_toDisplayString"],"sources":["/home/doduohor/vue/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\">\n        <div class=\"input-container\">\n            <textarea class=\"question-input\" v-model=\"question\" placeholder=\"Введите ваш вопрос здесь\"></textarea>\n            <button class=\"send-button\" @click=\"askQuestion\">&</button>\n        </div>\n        <div v-if=\"loading\" class=\"loading\">Загрузка...</div>\n        <div v-if=\"response\" class=\"response\">\n            Ответ: {{ response }}\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport axios from 'axios';\n\nexport default {\n    setup() {\n        const question = ref('');\n        const loading = ref(false);\n        const chatMessages = ref([]);\n\n        const addMessage = (text, isUser = false) => {\n            chatMessages.value.push({\n                id: chatMessages.value.length,\n                text,\n                isUser,\n            });\n        };\n\n        const askQuestion = async () => {\n            loading.value = true;\n            addMessage(question.value, true); // Добавить сообщение пользователя в чат\n            try {\n                const res = await axios.post('API_ENDPOINT', { question: question.value });\n                addMessage(res.data.answer); // Добавить ответ в чат\n            } catch (error) {\n                console.error(error);\n                addMessage('Произошла ошибка', false); // Добавить сообщение об ошибке в чат\n            } finally {\n                loading.value = false;\n            }\n        };\n\n        const handleKeyDown = (event) => {\n            if (event.key === 'Enter' && !event.shiftKey) {\n                event.preventDefault();\n                askQuestion();\n            }\n        };\n\n        return { question, loading, chatMessages, askQuestion, handleKeyDown };\n    }\n};\n</script>\n\n<style>\nbody {\n    background-color: #000000;\n    /* Цвет фона страницы */\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    /* Установка шрифта */\n}\n\n.chat-container {\n    position: fixed;\n    /* Фиксируем элемент */\n    bottom: 20px;\n    /* Отступ снизу */\n    left: 20px;\n    /* Отступ слева */\n    max-width: 600px;\n    padding: 20px;\n    background-color: #1e1e1e;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);\n    color: #ffffff;\n    z-index: 1000;\n    /* Убедитесь, что контейнер выше других элементов */\n}\n\n.input-container {\n    display: flex;\n    align-items: stretch;\n    margin-bottom: 15px;\n}\n\n.question-input {\n    flex-grow: 1;\n    padding: 12px;\n    background-color: #2a2a2a;\n    border: 1px solid #333333;\n    border-radius: 6px 0 0 6px;\n    color: #ffffff;\n    resize: none;\n}\n\n.send-button {\n    padding: 0 15px;\n    background-color: #4caf50;\n    color: white;\n    border: none;\n    border-radius: 0 6px 6px 0;\n    cursor: pointer;\n    transition: background-color 0.3s, transform 0.2s;\n}\n\n.send-button:hover {\n    background-color: #43a047;\n    transform: scale(1.05);\n}\n\n.loading {\n    text-align: center;\n    color: #4caf50;\n    margin-top: 10px;\n    font-family: Arial, sans-serif;\n}</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAiB;;;EAIRA,KAAK,EAAC;;;;EACLA,KAAK,EAAC;;;uBAN/BC,mBAAA,CASM,OATNC,UASM,GARFC,mBAAA,CAGM,OAHNC,UAGM,G,gBAFFD,mBAAA,CAAsG;IAA5FH,KAAK,EAAC,gBAAgB;+DAAUK,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAC,QAAQ,E,GAClDH,mBAAA,CAA2D;IAAnDH,KAAK,EAAC,aAAa;IAAES,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAO,WAAA,IAAAP,MAAA,CAAAO,WAAA,IAAAD,IAAA,CAAW;KAAE,GAAC,E,GAE3CN,MAAA,CAAAQ,OAAO,I,cAAlBZ,mBAAA,CAAqD,OAArDa,UAAqD,EAAjB,aAAW,K,mCACpCC,IAAA,CAAAC,QAAQ,I,cAAnBf,mBAAA,CAEM,OAFNgB,UAEM,EAFgC,UAC3B,GAAAC,gBAAA,CAAGH,IAAA,CAAAC,QAAQ,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}